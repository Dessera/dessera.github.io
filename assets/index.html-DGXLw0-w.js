import{_ as s,c as i,a,o as n}from"./app-BYecpAAQ.js";const l={};function t(r,e){return n(),i("div",null,e[0]||(e[0]=[a(`<p>一切的一切都要从<code>nix</code>的安装说起，想要得到<code>nix</code>包管理器，我们有两种方式：</p><ol><li>安装<code>NixOS</code>，一个纯粹基于<code>nix</code>的发行版</li><li>在别的发行版中安装<code>nix</code>包管理器</li></ol><p>我们将使用第一种方式，安装<code>NixOS</code>，本章主要参考了<a href="https://nixos-cn.org/" target="_blank" rel="noopener noreferrer">NixOS CN</a>。</p><blockquote><p>不纯粹的不可变性就是可变性，因此，笔者认为基于其他发行版的<code>nix</code>包管理器是不可靠的。</p></blockquote><h2 id="首先-制作安装介质" tabindex="-1"><a class="header-anchor" href="#首先-制作安装介质"><span>首先，制作安装介质</span></a></h2><p>安装一个操作系统的第一步是制作安装介质，如果读者们使用过<code>Archlinux</code>，那么<code>NixOS</code>的安装也能够轻松上手。</p><p>我们可以在<a href="https://nixos.org/download/" target="_blank" rel="noopener noreferrer">Install NixOS</a>这里下载到最新的<code>NixOS</code>安装镜像，然后将其烧录到U盘上，有几种方法：</p><ol><li>使用<code>dd</code>命令</li><li>使用<code>balena etcher</code>，一个跨平台的GUI烧录工具</li></ol><p>无论如何，我们最终都会得到一个烧录好安装介质的U盘，接下来，重启进入<code>BIOS</code>，将U盘设置为第一启动项，然后重启进入安装界面。</p><h2 id="加载安装器" tabindex="-1"><a class="header-anchor" href="#加载安装器"><span>加载安装器</span></a></h2><p>刚一进入安装界面，安装器会给我们几种选项：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-"><span class="line"><span>NixOS &lt;version&gt; Installer</span></span>
<span class="line"><span>NixOS &lt;version&gt; Installer (nomodeset)</span></span>
<span class="line"><span>NixOS &lt;version&gt; Installer (copytoram)</span></span>
<span class="line"><span>NixOS &lt;version&gt; Installer (debug)</span></span>
<span class="line"><span>NixOS &lt;version&gt; Installer (serial console=ttyS0,115200n8)</span></span>
<span class="line"><span>Memtest86+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们一般只需要关注前三项，他们的区别主要是：</p><ul><li><code>nomodeset</code>：禁用内核部分显卡功能，在安装过程中，如果遇到显卡驱动问题，可以尝试使用这个选项。</li><li><code>copytoram</code>：将安装器复制到内存中，这样在安装过程中，即使U盘被拔出，安装器也不会丢失。</li></ul><p>一般情况下，我们选择第一项即可。</p><p>顺利的话，我们会进入终端界面（如果在step1出现了问题，可以尝试回退镜像版本）：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-shell"><span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">[nixos@nixos:~]$</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="连接网络" tabindex="-1"><a class="header-anchor" href="#连接网络"><span>连接网络</span></a></h2><p>有几种方法可以连接网络，比如有线、USB连接和WIFI，前两种不需要过多配置，我们主要关注WIFI连接：</p><p>首先，我们要启用<code>wpa_supplicant</code>服务：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-shell"><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">sudo</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> systemctl</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> enable</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> wpa_supplicant</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后，进入<code>wpa_cli</code>：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-shell"><span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">[nixos@nixos:~]$ wpa_cli</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&gt; add_network</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">0</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&gt; set_network 0 ssid </span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;WIFI NAME&quot;</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">OK</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&gt; set_network 0 psk </span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;WIFI PASSWORD&quot;</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">OK</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&gt; set_network 0 key_mgmt WPA-PSK</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">OK</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&gt; enable_network 0</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">OK</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&gt; quit</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="分区" tabindex="-1"><a class="header-anchor" href="#分区"><span>分区</span></a></h2><p>因为我们是全新安装，不考虑是否有旧系统，所以直接在单块硬盘上进行分区，我们使用<code>cfdisk</code>进行分区，结果如下：</p><div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-plaintext"><span class="line"><span>EFI System Partition 1G</span></span>
<span class="line"><span>Linux Swap &lt;和你的内存大小一致&gt;</span></span>
<span class="line"><span>Linux Filesystem &lt;剩余空间&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里的分区更多</p>`,27)]))}const p=s(l,[["render",t]]),c=JSON.parse('{"path":"/nix/64k2nr74/","title":"安装NixOS","lang":"zh-CN","frontmatter":{"title":"安装NixOS","createTime":"2025/01/30 19:32:53","permalink":"/nix/64k2nr74/","tags":["Linux","Nix","Flake"],"description":"一切的一切都要从nix的安装说起，想要得到nix包管理器，我们有两种方式： 安装NixOS，一个纯粹基于nix的发行版 在别的发行版中安装nix包管理器 我们将使用第一种方式，安装NixOS，本章主要参考了NixOS CN。 不纯粹的不可变性就是可变性，因此，笔者认为基于其他发行版的nix包管理器是不可靠的。 首先，制作安装介质 安装一个操作系统的第一...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"安装NixOS\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-27T09:04:02.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://dessera.github.io/nix/64k2nr74/"}],["meta",{"property":"og:site_name","content":"Dessera Lab"}],["meta",{"property":"og:title","content":"安装NixOS"}],["meta",{"property":"og:description","content":"一切的一切都要从nix的安装说起，想要得到nix包管理器，我们有两种方式： 安装NixOS，一个纯粹基于nix的发行版 在别的发行版中安装nix包管理器 我们将使用第一种方式，安装NixOS，本章主要参考了NixOS CN。 不纯粹的不可变性就是可变性，因此，笔者认为基于其他发行版的nix包管理器是不可靠的。 首先，制作安装介质 安装一个操作系统的第一..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-27T09:04:02.000Z"}],["meta",{"property":"article:tag","content":"Flake"}],["meta",{"property":"article:tag","content":"Nix"}],["meta",{"property":"article:tag","content":"Linux"}],["meta",{"property":"article:modified_time","content":"2025-02-27T09:04:02.000Z"}]]},"readingTime":{"minutes":2.17,"words":650},"git":{"createdTime":1738555949000,"updatedTime":1740647042000,"contributors":[{"name":"Dessera","username":"Dessera","email":"dessera@qq.com","commits":2,"avatar":"https://avatars.githubusercontent.com/Dessera?v=4","url":"https://github.com/Dessera"}],"changelog":[{"hash":"e5f56b43fcd5898d27e50267f92351a758899f56","time":1740647042000,"email":"dessera@qq.com","author":"Dessera","message":"ctrait和一部分nix文档"},{"hash":"8aed796d43c1e40b1490e0dd3f4aefb27f1dba91","time":1738555949000,"email":"dessera@qq.com","author":"Dessera","message":"Nix-打包Tauri应用"}]},"autoDesc":true,"filePathRelative":"notes/nix/安装NixOS.md","headers":[]}');export{p as comp,c as data};
