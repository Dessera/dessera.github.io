import{_ as l,c as t,d as s,a as h,e as a,b as e,w as k,r as p,o as d}from"./app-BYecpAAQ.js";const r="/assets/cat-DLZWiL_s.jpg",g="/assets/cat_r45-Z0YmTLRr.jpg",c={};function A(y,i){const n=p("VPLink");return d(),t("div",null,[i[3]||(i[3]=s("p",null,"笔者最近在研究深度学习相关的框架，第一个目标便是 MNN 。MNN（Mobile Neural Network）是阿里巴巴集团开源的轻量级深度学习推理框架，具有良好的多端支持，使用 C++11 构建。",-1)),s("ul",null,[s("li",null,[i[1]||(i[1]=a("项目地址：")),e(n,{href:"github.com/alibaba/MNN"},{default:k(()=>i[0]||(i[0]=[a("MNN")])),_:1})]),i[2]||(i[2]=s("li",null,[a("官方文档："),s("a",{href:"https://mnn-docs.readthedocs.io/en/latest/",target:"_blank",rel:"noopener noreferrer"},"MNN-Doc")],-1))]),i[4]||(i[4]=h(`<p>我们今天使用的是<a href="https://github.com/alibaba/MNN/releases/tag/3.2.0" target="_blank" rel="noopener noreferrer">MNN-3.2.0</a>，上位机环境如下：</p><ul><li>操作系统：NixOS 25.11 (x86_64, Linux 6.16.9)</li><li>编译器：GCC 13.4.0, NVCC 12.8</li><li>CMake：3.31.7</li></ul><blockquote><p>因为 GCC14 的标准库使用了 NVCC 不支持的语法，因此笔者使用了 GCC13 ，根据官方文档，可以使用 GCC&gt;=4.9 或者 Clang 。</p></blockquote><h2 id="构建流程" tabindex="-1"><a class="header-anchor" href="#构建流程"><span>构建流程</span></a></h2><h3 id="预先准备" tabindex="-1"><a class="header-anchor" href="#预先准备"><span>预先准备</span></a></h3><p>按照官方文档，我们需要先生成 MNN Schema ：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-shell"><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">./schema/generate.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这里需要注意，如果你的环境不是标准的 FHS 环境，那么 MNN 所有的脚本都会失败，你需要将脚本开头的<code>#!/usr/bin/bash</code>替换成你的解释器路径，或者使用<code>#!/usr/bin/env bash</code>。</p><p>官方文档中还有一步，调用<code>./tools/script/get_model.sh</code>获取模型，但该脚本需要先编译 MNN Converter ，因此我们暂且搁置。</p><h3 id="编译" tabindex="-1"><a class="header-anchor" href="#编译"><span>编译</span></a></h3><p>创建一个<code>build</code>目录并进入，使用<code>cmake</code>进行构建：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-shell"><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">mkdir</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> build</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> &amp;&amp; </span><span style="--shiki-dark:#56B6C2;--shiki-light:#0184BC;">cd</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> build</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">cmake</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> -DMNN_CUDA=ON</span><span style="--shiki-dark:#56B6C2;--shiki-light:#0184BC;"> \\</span></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">    -DMNN_AVX512=ON</span><span style="--shiki-dark:#56B6C2;--shiki-light:#0184BC;"> \\</span></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">    -DMNN_BUILD_TEST=ON</span><span style="--shiki-dark:#56B6C2;--shiki-light:#0184BC;"> \\</span></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">    -DMNN_BUILD_DEMO=ON</span><span style="--shiki-dark:#56B6C2;--shiki-light:#0184BC;"> \\</span></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">    -DMNN_BUILD_CONVERTER=ON</span><span style="--shiki-dark:#56B6C2;--shiki-light:#0184BC;"> \\</span></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">    -DCMAKE_BUILD_TYPE=Debug</span><span style="--shiki-dark:#56B6C2;--shiki-light:#0184BC;"> \\</span></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">    -DCMAKE_EXPORT_COMPILE_COMMANDS=ON</span><span style="--shiki-dark:#56B6C2;--shiki-light:#0184BC;"> \\</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">    ..</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上 FLAGS 代表：</p><ul><li><code>MNN_CUDA</code>：使用 CUDA 后端</li><li><code>MNN_AVX512</code>：使用 AVX512 指令</li><li><code>MNN_BUILD_TEST</code>：构建测试</li><li><code>MNN_BUILD_DEMO</code>：构建样例</li><li><code>MNN_BUILD_CONVERTER</code>：构建模型转换器</li><li><code>CMAKE_BUILD_TYPE</code>：Debug 模式构建（调试需要）</li><li><code>CMAKE_EXPORT_COMPILE_COMMANDS</code>：导出编译数据库（ Clangd 需要）</li></ul><p>然后，使用<code>make</code>构建：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-shell"><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">make</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> -j4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>因为编译过程非常消耗内存，不建议使用最大并行数编译，笔者的笔记本内存为<code>16GB</code>+<code>16GB</code>交换区，只能使用<code>-j8</code>以下，否则会导致 KDE 崩溃。</p></blockquote><h2 id="测试" tabindex="-1"><a class="header-anchor" href="#测试"><span>测试</span></a></h2><h3 id="单元测试" tabindex="-1"><a class="header-anchor" href="#单元测试"><span>单元测试</span></a></h3><p>在<code>build</code>文件夹中，使用<code>run_test.out</code>进行测试：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-shell"><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">./run_test.out</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#56B6C2;--shiki-light:#0184BC;">...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">TEST_NAME_UNIT:</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> 单元测试</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">TEST_CASE_AMOUNT_UNIT:</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> {&quot;blocked&quot;:0,&quot;failed&quot;:2,&quot;passed&quot;:348,&quot;skipped&quot;:0}</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">TEST_CASE</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;">=</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">{</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">&quot;name&quot;</span><span style="--shiki-dark:#56B6C2;--shiki-light:#0184BC;">:</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">&quot;单元测试&quot;</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">,</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">&quot;failed&quot;</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">:2,</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">&quot;passed&quot;</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">:348}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里笔者在 Release 模式下能通过所有的测试，但在 Debug 模式下却有两个测试失败，分别是：</p><div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-plaintext"><span class="line"><span>Error: expr/PrearrangeTest</span></span>
<span class="line"><span>Error: op/ConvInt8/winograd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>因为笔者也是小白，解决不了这个问题，好在大部分功能没有出现问题，故而暂时作罢。</p><h3 id="简易图像变换" tabindex="-1"><a class="header-anchor" href="#简易图像变换"><span>简易图像变换</span></a></h3><p>使用<code>pictureRotate.out</code>来进行图像变换：</p><div class="language-plaintext line-numbers-mode" data-highlighter="shiki" data-ext="plaintext" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-plaintext"><span class="line"><span>./pictureRotate.out ../resource/images/cat.jpg 45 image_r45.jpg</span></span>
<span class="line"><span></span></span>
<span class="line"><span>size: 480, 360</span></span>
<span class="line"><span>CPU Group: [ 11  8  6  4  2  14  0  12  9  10  7  5  3  15  1  13 ], 800000 - 4600000</span></span>
<span class="line"><span>The device supports: i8sdot:0, fp16:0, i8mm: 0, sve2: 0, sme2: 0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输入图片是 MNN 自带的猫图像，转换前：</p><p><img src="`+r+'" alt="猫"></p><p>转换后：</p><p><img src="'+g+`" alt="猫R45"></p><h3 id="mobilenet-推理" tabindex="-1"><a class="header-anchor" href="#mobilenet-推理"><span>MobileNet 推理</span></a></h3><p>因为我们构建了 MNN Converter ，所以我们可以直接使用 MNN 提供的工具进行模型获取，我们运行：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-shell"><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">./tools/script/get_model.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>获取的模型被转换为<code>.mnn</code>格式，保存在项目根目录的<code>resource/model</code>中，我们可以使用构建获得的<code>GetMNNInfo</code>检查模型：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-shell"><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">./GetMNNInfo</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> ../resource/model/MobileNet/v2/mobilenet_v2_1.0_224.tflite.mnn</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">CPU</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> Group:</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> [ </span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">11</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  8</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  6</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  4</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  2</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  14</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  0</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  12</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  9</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  10</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  7</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  5</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  3</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  15</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  1</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  13</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> ],</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 800000</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> -</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 4600000</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">The</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> device</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> supports:</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> i8sdot:0,</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> fp16:0,</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> i8mm:</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> 0,</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> sve2:</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> 0,</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> sme2:</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 0</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">Model</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> default</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> dimensionFormat</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> is</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> NHWC</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">Model</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> Inputs:</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">[ input ]: dimensionFormat: NC4HW4, size: [ 1,3,224,224 ], type is float</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">Model</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> Outputs:</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">[ MobilenetV2/Predictions/Reshape_1 ]</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">Model</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> Version:</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 3.2.0</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">Model</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> bizCode:</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 0000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>还是使用猫图片，使用<code>mobilenetTest.out</code>进行推理测试：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-shell"><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">./mobilenetTest.out</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> ../resource/model/MobileNet/v2/mobilenet_v2_1.0_224.tflite.mnn</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> ../resource/images/cat.jpg</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">model:../resource/model/MobileNet/v2/mobilenet_v2_1.0_224.tflite.mnn,</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> input</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> image:../resource/images/cat.jpg,</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> forwardType:2,</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> precision:1</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">CPU</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> Group:</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> [ </span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">11</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  8</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  6</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  4</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  2</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  14</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  0</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  12</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  9</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  10</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  7</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  5</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  3</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  15</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  1</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  13</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> ],</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 800000</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> -</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 4600000</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">The</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> device</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> supports:</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> i8sdot:0,</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> fp16:0,</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> i8mm:</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> 0,</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> sve2:</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> 0,</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> sme2:</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 0</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">main,</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> 90,</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> cost</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> time:</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 6.300000</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> ms</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">output</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> size:1001</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">282,</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 0.434767</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">283,</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 0.218346</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">286,</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 0.173853</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">288,</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 0.009451</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">285,</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 0.008966</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">284,</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 0.006774</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">739,</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 0.004715</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">969,</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 0.003044</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">357,</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 0.002419</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">905,</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 0.001989</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里参数最后添加了一个<code>2</code>，代表使用 CUDA 推理。</p><p>因为模型使用 ImageNet 进行训练，我们对比最高置信度 ID 和 对照表，得到最终预测结果是<code>tiger cat</code>。</p><h2 id="简单分析picturerotate-out" tabindex="-1"><a class="header-anchor" href="#简单分析picturerotate-out"><span>简单分析<code>pictureRotate.out</code></span></a></h2><p><code>pictureRotate.out</code>的源代码位于根目录的<code>demo/exec/pictureRotate.cpp</code>，其简化源码为：</p><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">int</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;"> main</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">int</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;"> argc</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">const</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;"> char*</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;"> argv</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">[]) {</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#A0A1A7;--shiki-light-font-style:italic;">    // Load image</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">    int</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> width, height, channel;</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">    auto</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> inputImage </span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">=</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;"> load_img</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(inputPatch, </span><span style="--shiki-dark:#56B6C2;--shiki-light:#A626A4;">&amp;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">width, </span><span style="--shiki-dark:#56B6C2;--shiki-light:#A626A4;">&amp;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">height, </span><span style="--shiki-dark:#56B6C2;--shiki-light:#A626A4;">&amp;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">channel, </span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">4</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#A0A1A7;--shiki-light-font-style:italic;">    // Construct Matrix (Trans)</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">    Matrix trans;</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#E45649;">    trans</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">setScale</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">1.0</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;"> /</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> (width </span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">-</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 1</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">), </span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">1.0</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;"> /</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> (height </span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">-</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 1</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">));</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#E45649;">    trans</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">postRotate</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">angle, </span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">0.5</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">0.5</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">);</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#E45649;">    trans</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">postScale</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">((width </span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">-</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 1</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">), (height </span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">-</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> 1</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#A0A1A7;--shiki-light-font-style:italic;">    // Construct ImageProcess Config</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">    ImageProcess::Config config;</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#E45649;">    config</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">filterType</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">   =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> NEAREST;</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#E45649;">    config</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">sourceFormat</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> RGBA;</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#E45649;">    config</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">destFormat</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">   =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> RGBA;</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#E45649;">    config</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">wrap</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">         =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> ZERO;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#A0A1A7;--shiki-light-font-style:italic;">    // Construct ImageProcess</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">    std::shared_ptr</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">&lt;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">ImageProcess</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">&gt;</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;"> pretreat</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">ImageProcess</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">::</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">create</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(config), ImageProcess::destroy);</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#E45649;">    pretreat</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">-&gt;</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">setMatrix</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(trans);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">    {</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">        std::shared_ptr</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">&lt;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">Tensor</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">&gt;</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;"> wrapTensor</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">ImageProcess</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">::</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">createImageTensor</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&lt;</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">uint8_t</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">&gt;(width, height, </span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">4</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">nullptr</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">), MNN::Tensor::destroy);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#A0A1A7;--shiki-light-font-style:italic;">        // Operate the conversion</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#E45649;">        pretreat</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">-&gt;</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">convert</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">((</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">uint8_t*</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">)inputImage, width, height, </span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">0</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#E5C07B;--shiki-light:#E45649;">wrapTensor</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">get</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#A0A1A7;--shiki-light-font-style:italic;">        // Write file</span></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">        write_img</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#E45649;">argv</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">[</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">3</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">], width, height, </span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">4</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#E5C07B;--shiki-light:#E45649;">wrapTensor</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">-&gt;</span><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">host</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">&lt;uint8_t&gt;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(), </span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">4</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;"> *</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> width);</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">    }</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这部分代码的核心逻辑可以用以下步骤概括：</p><ul><li>创建转换器（<code>Matrix</code>）</li><li>创建图片预处理器（<code>ImageProcess</code>）</li><li>执行转换（<code>pretreat-&gt;convert</code>）</li></ul><p>我们不进行其他复杂部分的分析，只分析和转换有关的<code>Matrix</code>，<code>Matrix</code>被实现为一个<code>3x3</code>的浮点矩阵，其代表了图像上的所有点的坐标的一次线性变换，初始化时，其会被设置为单位矩阵（不进行变换）。</p><p><code>Matrix</code>中有两族变换函数：</p><ul><li><code>setXXX</code>：将矩阵设置为某个样子，例如<code>setScale</code>是将矩阵设置为单位矩阵放缩后的状态，<code>setIdentity</code>将矩阵设置为单位矩阵。</li><li><code>postXXX</code>：将矩阵进行某种变换，该族函数将当前矩阵和新的变换矩阵相乘，相当于在线性变换“列表”中添加一步，比如<code>postRotate</code>就是在当前变换后添加一次旋转变换，在源代码中就是先缩放后旋转。</li></ul><p><code>Matrix</code>还可以使用<code>postConcat</code>方法和其他<code>Matrix</code>进行组合，实际上其他的<code>postXXX</code>方法基本都是通过构建临时矩阵，并使用<code>postConcat</code>实现的。</p><h2 id="nix-开发环境参考" tabindex="-1"><a class="header-anchor" href="#nix-开发环境参考"><span>Nix 开发环境参考</span></a></h2><p>下面是笔者的<code>flake.nix</code>开发环境，仅供参考：</p><div class="language-nix line-numbers-mode" data-highlighter="shiki" data-ext="nix" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-nix"><span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">{</span></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  description</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> = </span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;MNN Dev environment&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  inputs</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> = {</span></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">    nixpkgs</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">url</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> = </span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;github:nixos/nixpkgs?ref=nixpkgs-unstable&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">    flake-parts</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">url</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> = </span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;github:hercules-ci/flake-parts&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">  };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  outputs</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> =</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">    { </span><span style="--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">flake-parts</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, ... }@</span><span style="--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">inputs</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">:</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">    flake-parts</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">lib</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">mkFlake</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> { </span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">inherit</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> inputs</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">; } {</span></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">      systems</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> = [ </span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;x86_64-linux&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> ];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">      perSystem</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> =</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">        { </span><span style="--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">pkgs</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">system</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, ... }:</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">        let</span></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">          stdenv</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> = </span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">pkgs</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">gcc13Stdenv</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">          clang-tools</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> = </span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">pkgs</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">callPackage</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> ./nix/clang-tools.nix</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> {</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">            inherit</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> stdenv</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">          };</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">        in</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">        {</span></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">          devShells</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">default</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> =</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">            pkgs</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">mkShell</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">override</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">              {</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">                inherit</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> stdenv</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">              }</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">              {</span></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">                hardeningDisable</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> = [ </span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;fortify&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> ];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">                buildInputs</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> = </span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">with</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;"> pkgs</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">; [</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">                  cudaPackages</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">cudatoolkit</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">                  cmake</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">                ];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">                packages</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> =</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">                  (</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">with</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;"> pkgs</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">; [</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">                    nixd</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">                    nixfmt-rfc-style</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">                  ])</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">                  ++ [</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">                    clang-tools</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">                  ];</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">              };</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">          _module</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">args</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">pkgs</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> = </span><span style="--shiki-dark:#56B6C2;--shiki-light:#0184BC;">import</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;"> inputs</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">nixpkgs</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> {</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">            inherit</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> system</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">            config</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> = {</span></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">              allowUnfree</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> = </span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">true</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">              cudaSupport</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> = </span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">true</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">            };</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">          };</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">        };</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">    };</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>clang-tools.nix</code>：</p><div class="language-nix line-numbers-mode" data-highlighter="shiki" data-ext="nix" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-nix"><span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">{</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">  stdenv</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">,</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">  lib</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">,</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">  runCommand</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">,</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">  makeWrapper</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">,</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">  llvmPackages</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">,</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">  extraQueryDriver</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> ? </span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">,</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">}:</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">let</span></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  queryDriver</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> = </span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">lib</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">concatStringsSep</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> &quot;,&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> [</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">    &quot;</span><span style="--shiki-dark:#C678DD;--shiki-light:#CA1243;">\${</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">stdenv</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">cc</span><span style="--shiki-dark:#C678DD;--shiki-light:#CA1243;">}</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">/bin/*&quot;</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">    extraQueryDriver</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">  ];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  nextPath</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> =</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">    path</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">:</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">    let</span></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">      subNext</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> = </span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">lib</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">lists</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">head</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> (</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">lib</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">attrNames</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> (</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">builtins</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">readDir</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;"> path</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">));</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">    in</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">    &quot;</span><span style="--shiki-dark:#C678DD;--shiki-light:#CA1243;">\${</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">path</span><span style="--shiki-dark:#C678DD;--shiki-light:#CA1243;">}</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">/</span><span style="--shiki-dark:#C678DD;--shiki-light:#CA1243;">\${</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">subNext</span><span style="--shiki-dark:#C678DD;--shiki-light:#CA1243;">}</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  buildGccInternalInc</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> =</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">    stdenv</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">:</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">    let</span></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">      baseLib</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> = </span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;</span><span style="--shiki-dark:#C678DD;--shiki-light:#CA1243;">\${</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">stdenv</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">cc</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">cc</span><span style="--shiki-dark:#C678DD;--shiki-light:#CA1243;">}</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">/lib/gcc&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">    in</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#A0A1A7;--shiki-light-font-style:italic;">    # arch and version</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#A0A1A7;--shiki-light-font-style:italic;">    # because of the inconsistency of derivation version of gcc, there is</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#A0A1A7;--shiki-light-font-style:italic;">    # no way to get the version here</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">    &quot;</span><span style="--shiki-dark:#C678DD;--shiki-light:#CA1243;">\${</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">nextPath</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#50A14F;"> (</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">nextPath</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;"> baseLib</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#50A14F;">)</span><span style="--shiki-dark:#C678DD;--shiki-light:#CA1243;">}</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">/include&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  buildClangInternalInc</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> = </span><span style="--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">stdenv</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">: </span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;</span><span style="--shiki-dark:#C678DD;--shiki-light:#CA1243;">\${</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">stdenv</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">cc</span><span style="--shiki-dark:#C678DD;--shiki-light:#CA1243;">}</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">/resource-root/include&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#A0A1A7;--shiki-light-font-style:italic;">  # once https://github.com/clangd/clangd/issues/2074 is fixed,</span></span>
<span class="line"><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#A0A1A7;--shiki-light-font-style:italic;">  # we can remove these function and use the built-in include path</span></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">  buildInternalInc</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> =</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">    stdenv</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">:</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">    if</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;"> stdenv</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">cc</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">isGNU</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;"> then</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">      buildGccInternalInc</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;"> stdenv</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">    else</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;"> if</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;"> stdenv</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">cc</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">isClang</span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;"> then</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">      buildClangInternalInc</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;"> stdenv</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">    else</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">      &quot;&quot;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">in</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">runCommand</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;"> &quot;clang-tools&quot;</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">  {</span></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">    unwrapped</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> = </span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">llvmPackages</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">clang-unwrapped</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">;</span></span>
<span class="line"><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">    buildInputs</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> = [ </span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">makeWrapper</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> ];</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">  }</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">  &#39;&#39;</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">    mkdir -p $out/bin</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">    for tool in $unwrapped/bin/clang-*; do</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">      tool=$(basename &quot;$tool&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">      if [[ $tool == &quot;clang-cl&quot; || $tool == &quot;clang-cpp&quot; ]]; then</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">        continue</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">      fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">      if [[ ! $tool =~ ^clang\\-[a-zA-Z_\\-]+$ ]]; then</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">        continue</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">      fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">      ln -s $unwrapped/bin/$tool $out/bin/$tool</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">    done</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">    makeWrapper $unwrapped/bin/clangd $out/bin/clangd \\</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">      --add-flags &quot;--query-driver=</span><span style="--shiki-dark:#C678DD;--shiki-light:#CA1243;">\${</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">queryDriver</span><span style="--shiki-dark:#C678DD;--shiki-light:#CA1243;">}</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;     \\</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">      --set LANG &quot;en_US.UTF-8&quot;                        \\</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">      --set CPATH &quot;</span><span style="--shiki-dark:#C678DD;--shiki-light:#CA1243;">\${</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;">buildInternalInc</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#383A42;--shiki-light-font-style:inherit;"> stdenv</span><span style="--shiki-dark:#C678DD;--shiki-light:#CA1243;">}</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&quot;</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">  &#39;&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,54))])}const B=l(c,[["render",A]]),v=JSON.parse('{"path":"/article/93byyy63/","title":"深度学习笔记-MNN上位机编译","lang":"zh-CN","frontmatter":{"title":"深度学习笔记-MNN上位机编译","createTime":"2025/10/08 17:26:46","permalink":"/article/93byyy63/","tags":["C++","深度学习","MNN"],"description":"笔者最近在研究深度学习相关的框架，第一个目标便是 MNN 。MNN（Mobile Neural Network）是阿里巴巴集团开源的轻量级深度学习推理框架，具有良好的多端支持，使用 C++11 构建。 项目地址： 官方文档：MNN-Doc 我们今天使用的是MNN-3.2.0，上位机环境如下： 操作系统：NixOS 25.11 (x86_64, Linu...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"深度学习笔记-MNN上位机编译\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-25T16:41:45.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://dessera.github.io/article/93byyy63/"}],["meta",{"property":"og:site_name","content":"Dessera Lab"}],["meta",{"property":"og:title","content":"深度学习笔记-MNN上位机编译"}],["meta",{"property":"og:description","content":"笔者最近在研究深度学习相关的框架，第一个目标便是 MNN 。MNN（Mobile Neural Network）是阿里巴巴集团开源的轻量级深度学习推理框架，具有良好的多端支持，使用 C++11 构建。 项目地址： 官方文档：MNN-Doc 我们今天使用的是MNN-3.2.0，上位机环境如下： 操作系统：NixOS 25.11 (x86_64, Linu..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-25T16:41:45.000Z"}],["meta",{"property":"article:tag","content":"MNN"}],["meta",{"property":"article:tag","content":"深度学习"}],["meta",{"property":"article:tag","content":"C++"}],["meta",{"property":"article:modified_time","content":"2025-10-25T16:41:45.000Z"}]]},"readingTime":{"minutes":5.52,"words":1657},"git":{"createdTime":1759921403000,"updatedTime":1761410505000,"contributors":[{"name":"Dessera","username":"Dessera","email":"dessera@qq.com","commits":2,"avatar":"https://avatars.githubusercontent.com/Dessera?v=4","url":"https://github.com/Dessera"}],"changelog":[{"hash":"09cd98b8040a0da9b3f5b676459c6265a9a5cf5e","time":1761410505000,"email":"dessera@qq.com","author":"Dessera","message":"session create"},{"hash":"8822e76d8d2b38cdc55efc7d8980256c70213d4a","time":1759921403000,"email":"dessera@qq.com","author":"Dessera","message":"MNN01"}]},"autoDesc":true,"filePathRelative":"笔记/深度学习笔记-MNN上位机编译.md","headers":[],"categoryList":[{"id":"7051dc","sort":10000,"name":"笔记"}]}');export{B as comp,v as data};
